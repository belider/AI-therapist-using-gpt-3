from flask import Flask, request, jsonify
import os
from database_class import Database
import requests
from waitress import serve

app = Flask(__name__)
db = Database()

PORT = int(os.environ.get('PORT', 8080))
HOST = "0.0.0.0"
BOT_TOKEN = os.getenv('BOT_TOKEN')

def send_message_in_bot(user_id, text): 
    response = requests.post(
        url=f'https://api.telegram.org/bot{BOT_TOKEN}/sendMessage',
        data={'chat_id': user_id, 'text': text}
    ).json()
    return response

@app.route('/', methods=['GET'])
def test_url(): 
    return "Hello world"

@app.route('/pmt', methods=['POST'])
def payment_callback_listener():
    data = request.get_json()
    print(data)

    payment_status = data['status']
    payment_id = data['invoiceId']

    # update payment status
    query = f"""UPDATE payments 
                SET status='{payment_status}'
                WHERE payment_id='{payment_id}'; """
    db.execute_insert_query(query)
    
    user_id = data['custom']['user_id']

    if payment_status == 'SUCCESS': 
        log_message = f'payment {payment_id} successfull'
        user_message = """–û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–∞. 
–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –æ–±—â–µ–Ω–∏–µ üòä\n
/newsession - –∫–æ–º–∞–Ω–¥–∞, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–∑–≥–æ–≤–æ—Ä"""
        
        # update user paid limit
        query = f"""UPDATE user_paid_limits 
                SET paid_messages = paid_messages + 500
                WHERE user_id='{user_id}'; """
        db.execute_insert_query(query)
    elif payment_status == 'FAIL': 
        log_message = f'payment {payment_id} error'
        user_message = "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é –æ–ø–ª–∞—Ç–∞ –Ω–µ –ø—Ä–æ—à–ª–∞, –¥–µ–Ω—å–≥–∏ –Ω–µ —Å–ø–∏—Å–∞–ª–∏—Å—å. \n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–ø–ª–∞—Ç–∏—Ç—å –µ—â–µ —Ä–∞–∑ –ø–æ —Ç–æ–π –∂–µ —Å—Å—ã–ª–∫–µ. "
    
    print(log_message)
    send_message_in_bot(user_id, user_message)

    return "OK"

# test curl:
# curl -X POST http://192.168.1.102:8080/pmt -H "Content-Type: application/json" -d '{"Id": 79, "status": 3}'
# curl -X POST https://worker-production-9383.up.railway.app/pmt -H "Content-Type: application/json" -d '{"Id": 79, "status": 3}'

if __name__ == '__main__':
    # running in development env
    # app.run(
    #     host=HOST,
    #     port=PORT, 
    #     debug=True
    # )

    # running in production env
    serve(app, host=HOST, port=PORT)